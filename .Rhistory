ct <- read.csv("cortical_thickness_by_subject.csv")
gene <- readxl::read_excel("Table_genotypes_RaulVicente.xlsx")
install.packages("readxl")
ct <- read.csv("cortical_thickness_by_subject.csv")
gene <- readxl::read_excel("Table_genotypes_RaulVicente.xlsx")
library("readxl", lib.loc="~/R/win-library/3.5")
ct <- read.csv("cortical_thickness_by_subject.csv")
gene <- readxl::read_excel("Table_genotypes_RaulVicente.xlsx")
install.packages("rlang")
library("readxl", lib.loc="~/R/win-library/3.5")
ct <- read.csv("cortical_thickness_by_subject.csv")
gene <- readxl::read_excel("Table_genotypes_RaulVicente.xlsx")
k <- sapply(ct[, -1], class)
unique(k)
library("d3heatmap")
install.packages("d3heatmap")
library("d3heatmap")
d3heatmap(scale(ct[, -1]), #colors = "RdYlBu",
k_row = 8, # Number of groups in rows
k_col = 3 # Number of groups in columns
)
install.packages("dendextend")
rownames(ct) <- ct$subject_id
ct_scaled <- scale(na.omit(ct[, -1]))
#Dimensionality reduction can help with data visualization (e.g. PCA method).
res.pca <- PCA(ct_scaled,  graph = FALSE)
library(tidyverse)
install.packages("NbClust")
View(gene)
cor(median(ct[,-1]), gene$age)
median(ct[,-1])
median(ct[,-1], na.rm = TRUE)
k <- sapply(ct[, -1], class)
unique(k)
mean(ct[, -1])
mean(ct[, -1], na.rm = TRUE)
View(ct)
ct_median <- ct$subject_id
ct_median <- as.data.frame(ct$subject_id)
ct_median$mediana <- mediana(ct[,-1])
ct_median$mediana <- median(ct[,-1])
ct_median$mediana <- median(ct[,-1], na.rm = TRUE)
rm(ct_median)
ct$mediana <- median.default(ct[,-1])
ct$mediana <- median.default(ct[,-1], na.rm = TRUE)
median(ct[1,-1])
median(ct[1,-1], na.rm = TRUE)
mean(ct[1, -1])
mean(ct[1, -1], na.rm = TRUE)
ct[1, -1]
as.vector(ct[1, -1])
as.ar
as.array(ct[1, -1])
as.list(ct[1, -1])
the_median <- apply(ct[,-1], 1, median)
ct$Median <- the_median
the_median <- apply(ct[,-1], 1, median, na.rm = TRUE)
ct$Median <- the_median
cor(the_median, gene$age)
names(ct)[74]
names(ct)[75]
names(ct)[76]
the_median_left <- apply(ct[,2:75], 1, median, na.rm = TRUE)
the_median_right <- apply(ct[,76:149], 1, median, na.rm = TRUE)
ct[,1]
gene[,1]
View(gene)
cor(the_median, gene$age)
cor(the_median_left, gene$age)
cor(the_median_right, gene$age)
names(gene)[1] <- names(ct)[1]
full_df = merge(ct, gene, by = 'subject_id')
View(full_df)
full_df = merge(ct[, (-149, -150)], gene, by = 'subject_id')
full_df = merge(ct[, (-149, -150)], gene, by = 'subject_id')
full_df = merge(ct[, c(-149, -150)], gene, by = 'subject_id')
colnames(full_df[, 152:157])
full_df = merge(ct[, -150], gene, by = 'subject_id')
colnames(full_df[, 152:157])
full_df$apoe <- as.factor(full_df$apoe)
levels(full_df$apoe)
full_df$bin1 <- as.factor(full_df$bin1)
levels(full_df$bin1)
full_df$clu <- as.factor(full_df$clu)
levels(full_df$clu)
full_df$abca7 <- as.factor(full_df$abca7)
levels(full_df$abca7)
full_df$cr1 <- as.factor(full_df$cr1)
levels(full_df$cr1)
full_df$picalm <- as.factor(full_df$picalm)
levels(full_df$picalm)
full_df <- full_df[complete.cases(full_df),]
# Compute the analysis of variance
res.aov <- aov(left_G_and_S_frontomargin ~ apoe, data = full_df)
# Summary of the analysis
summary(res.aov)
brain_area <- names(full_df[, 2:149])
genotype <- names(full_df[, 152:157])
genotype[7] <- 'sex'
library("broom")
aov_single <- as.data.frame(matrix(data = NA, nrow = length(brain_area), ncol = length(genotype)+1))
names(aov_single)[1] <- 'brain_area'
names(aov_single)[2] <- genotype[1]
names(aov_single)[3] <- genotype[2]
names(aov_single)[4] <- genotype[3]
names(aov_single)[5] <- genotype[4]
names(aov_single)[6] <- genotype[5]
names(aov_single)[7] <- genotype[6]
names(aov_single)[8] <- genotype[7]
aov_single$brain_area <- brain_area
for (g in 1:length(genotype)){
for (br in 1:length(brain_area)){
res.aov <- aov(full_df[[brain_area[br]]] ~ full_df[[genotype[g]]])
s <- tidy(res.aov)
aov_single[br, (g+1)] <- s$p.value[1]
}
}
aov_single$bonferroni_apoe <- p.adjust(aov_single$apoe, method = "bonferroni")
aov_single$fdr_apoe <- p.adjust(aov_single$apoe, method = "fdr")
aov_single$bonferroni_bin1 <- p.adjust(aov_single$bin1, method = "bonferroni")
aov_single$fdr_bin1 <- p.adjust(aov_single$bin1, method = "fdr")
aov_single$bonferroni_clu <- p.adjust(aov_single$clu, method = "bonferroni")
aov_single$fdr_clu <- p.adjust(aov_single$clu, method = "fdr")
aov_single$bonferroni_abca7 <- p.adjust(aov_single$abca7, method = "bonferroni")
aov_single$fdr_abca7 <- p.adjust(aov_single$abca7, method = "fdr")
aov_single$bonferroni_cr1 <- p.adjust(aov_single$cr1, method = "bonferroni")
aov_single$fdr_cr1 <- p.adjust(aov_single$cr1, method = "fdr")
aov_single$bonferroni_picalm <- p.adjust(aov_single$picalm, method = "bonferroni")
aov_single$fdr_picalm <- p.adjust(aov_single$picalm, method = "fdr")
aov_single$bonferroni_sex <- p.adjust(aov_single$sex, method = "bonferroni")
aov_single$fdr_sex <- p.adjust(aov_single$sex, method = "fdr")
aov_single[aov_single$fdr_sex < 0.05, c(1, 22)]
View(aov_single)
res.aov <- aov(full_df[[brain_area[br]]] ~ full_df[[genotype[1]]])
tidy(res.aov)
res.aov <- aov(full_df[[brain_area[br]]] ~ full_df[[genotype[2]]])
tidy(res.aov)
res.aov <- aov(full_df[[brain_area[br]]] ~ full_df[[genotype[1]]]+full_df[[genotype[2]]])
tidy(res.aov)
res.aov <- aov(full_df[[brain_area[br]]] ~ full_df[[genotype[1]]]*full_df[[genotype[2]]])
tidy(res.aov)
aov_double <- as.data.frame(matrix(data = NA, nrow = length(brain_area), ncol = 22)) #ncol = C_2(7)
names(aov_double)[1] <- 'brain_area'
aov_double$brain_area <- brain_area
k <- 2
for (i in 1:(length(genotype)-1)){
for (j in (i+1):length(genotype)){
names(aov_double)[k] <- paste(genotype[i], genotype[j])
k <- k + 1
}
}
k <- 2
for (i in 1:(length(genotype)-1)){
for (j in (i+1):length(genotype)){
for (br in 1:length(brain_area)){
res.aov <- aov(full_df[[brain_area[br]]] ~ full_df[[genotype[i]]]*full_df[[genotype[j]]])
s <- tidy(res.aov)
#aov_double[br, k] <- paste(s$p.value[1], s$p.value[2], s$p.value[3])
aov_double[br, k] <- s$p.value[3]
}
k <- k + 1
}
}
for (col in 23:43){
aov_double[, col] <- p.adjust(aov_double[, (col-21)], method = "fdr")
}
aov_double[aov_double$V23 < 0.05, c(1, 2, 23)]
aov_double[aov_double$V24 < 0.05, c(1, 3, 24)]
aov_double[aov_double$V26 < 0.05, c(1, 5, 26)]
aov_double[aov_double$V27 < 0.05, c(1, 6, 27)]
aov_double[aov_double$V34 < 0.5, c(1, 13, 34)]
aov_double[aov_double$V23 < 0.05, c(1, 2, 23)]
aov_double[aov_double$V24 < 0.05, c(1, 3, 24)]
aov_double[aov_double$V26 < 0.05, c(1, 5, 26)]
aov_double[aov_double$V27 < 0.05, c(1, 6, 27)]
aov_double[aov_double$V34 < 0.05, c(1, 13, 34)]
for (n in 1:(length(genotype)-2)){
for (i in (n+1):(length(genotype)-1)){
for (j in (i+1):length(genotype)){
for (br in 1:length(brain_area)){
res.aov <- aov(full_df[[brain_area[br]]] ~ full_df[[genotype[n]]]*full_df[[genotype[i]]]*full_df[[genotype[j]]])
s <- tidy(res.aov)
if (mean(s$p.value, na.rm = TRUE) < 0.1){
print(s)
print(br, genotype[n], genotype[i], genotype[j])}
}
}
}
}
for (k in 1:(length(genotype)-3)){
for (n in (k+1):(length(genotype)-2)){
for (i in (n+1):(length(genotype)-1)){
for (j in (i+1):length(genotype)){
for (br in 1:length(brain_area)){
res.aov <- aov(full_df[[brain_area[br]]] ~ full_df[[genotype[k]]] * full_df[[genotype[n]]] * full_df[[genotype[i]]] *
full_df[[genotype[j]]])
s <- tidy(res.aov)
if (mean(s$p.value, na.rm = TRUE) < 0.15){
print(s)
#print(br, genotype[k], genotype[n], genotype[i], genotype[j])}
}
}
}
}
}
}
#NO RESULT
View(aov_double)
for (n in 1:(length(genotype)-2)){
for (i in (n+1):(length(genotype)-1)){
for (j in (i+1):length(genotype)){
for (br in 1:length(brain_area)){
res.aov <- aov(full_df[[brain_area[br]]] ~ full_df[[genotype[n]]]*full_df[[genotype[i]]]*full_df[[genotype[j]]])
s <- tidy(res.aov)
if (mean(s$p.value, na.rm = TRUE) < 0.1){
print(s)
print(br, genotype[n], genotype[i], genotype[j])}
}
}
}
}
for (n in 1:(length(genotype)-2)){
for (i in (n+1):(length(genotype)-1)){
for (j in (i+1):length(genotype)){
for (br in 1:length(brain_area)){
res.aov <- aov(full_df[[brain_area[br]]] ~ full_df[[genotype[n]]]*full_df[[genotype[i]]]*full_df[[genotype[j]]])
s <- tidy(res.aov)
if (mean(s$p.value, na.rm = TRUE) < 0.1){
print(s)
print( genotype[n], genotype[i], genotype[j])
}
}
}
}
}
for (n in 1:(length(genotype)-2)){
for (i in (n+1):(length(genotype)-1)){
for (j in (i+1):length(genotype)){
for (br in 1:length(brain_area)){
res.aov <- aov(full_df[[brain_area[br]]] ~ full_df[[genotype[n]]]*full_df[[genotype[i]]]*full_df[[genotype[j]]])
s <- tidy(res.aov)
if (mean(s$p.value, na.rm = TRUE) < 0.1){
print(s)
print(paste(br, genotype[n], genotype[i], genotype[j]))
}
}
}
}
}
for (n in 1:(length(genotype)-2)){
for (i in (n+1):(length(genotype)-1)){
for (j in (i+1):length(genotype)){
for (br in 1:length(brain_area)){
res.aov <- aov(full_df[[brain_area[br]]] ~ full_df[[genotype[n]]]*full_df[[genotype[i]]]*full_df[[genotype[j]]])
s <- tidy(res.aov)
if (s$p.value[7] < 0.05){
print(s)
print(paste(br, genotype[n], genotype[i], genotype[j]))
}
}
}
}
}
brain_area[144]
names(brain_area)[145]
names(ct)[145]
View(ct)
na.om
na.omit(ct[, 145])
ct[is.na(), 145]
nrow(ct[is.na(ct[, 145]),])
nrow(ct[!is.na(ct[, 145]),])
names(full_df)[145]
names(full_df)[151:157]
names(full_df)[c(152, 153, 155)]
three_way_anova <- full_df[, c(1, 145, 152, 153, 155)]
three_way_anova$gene_combo <- paste(three_way_anova[, 3:5])
library("dplyr", lib.loc="~/R/win-library/3.5")
library("tidyr", lib.loc="~/R/win-library/3.5")
three_way_anova %>%  unite("gene_combo", apoe:abca7, remove = FALSE)
three_way_anova <- three_way_anova %>%  unite("gene_combo", apoe:abca7, remove = FALSE)
library("ggplot2", lib.loc="~/R/win-library/3.5")
ggboxplot(three_way_anova, x = "gene_combo", y = "right_S_suborbital",
color = "gene_combo",
ylab = "right_S_suborbital", xlab = "apoe:bin1:abca7")
library("ggpubr", lib.loc="~/R/win-library/3.5")
ggboxplot(three_way_anova, x = "gene_combo", y = "right_S_suborbital",
color = "gene_combo",
ylab = "right_S_suborbital", xlab = "apoe:bin1:abca7")
ggboxplot(three_way_anova, x = "gene_combo", y = "right_S_suborbital",
color = "gene_combo",
ylab = "right_S_suborbital", xlab = "apoe_bin1_abca7")
ggboxplot(three_way_anova, x = "gene_combo", y = "right_S_suborbital",
color = "gene_combo",
ylab = "right_S_suborbital", xlab = "apoe_bin1_abca7")
